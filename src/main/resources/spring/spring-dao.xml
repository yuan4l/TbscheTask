<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                           http://mybatis.org/schema/mybatis-spring
                           http://mybatis.org/schema/mybatis-spring-1.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <!--<context:property-placeholder location="classpath:props/db.properties" />-->

    <!--&lt;!&ndash; 数据源BoneCP连接池 &ndash;&gt;-->
    <!--<bean id="yuanDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">-->
        <!--<property name="driverClass" value="${yuan.db.driver}" />-->
        <!--<property name="jdbcUrl" value="${yuan.db.url}" />-->
        <!--<property name="username" value="${yuan.db.username}" />-->
        <!--<property name="password" value="${yuan.db.password}" />-->
        <!--<property name="idleConnectionTestPeriodInMinutes" value="${idleConnectionTestPeriodInMinutes}" />-->
        <!--<property name="idleMaxAgeInMinutes" value="${idleMaxAgeInMinutes}" />-->
        <!--<property name="maxConnectionsPerPartition" value="${maxConnectionsPerPartition}" />-->
        <!--<property name="minConnectionsPerPartition" value="${minConnectionsPerPartition}" />-->
        <!--<property name="partitionCount" value="${partitionCount}" />-->
        <!--<property name="acquireIncrement" value="${acquireIncrement}" />-->
        <!--<property name="statementsCacheSize" value="${statementsCacheSize}" />-->
        <!--<property name="defaultAutoCommit" value="true" />-->
    <!--</bean>-->


    <!--&lt;!&ndash; MyBatis配置 &ndash;&gt;-->
    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource" />-->
        <!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />-->
        <!--<property name="typeAliasesPackage" value="dao" />-->
        <!--<property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml" />-->
    <!--</bean>-->

    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--<property name="dataSource" ref="dataSource" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 使用annotation定义事务 &ndash;&gt;-->
    <!--<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />-->

    <!--&lt;!&ndash; 定义aspectj &ndash;&gt;-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true" />-->

    <!--<mybatis:scan base-package="dao" factory-ref="sqlSessionFactory" annotation="org.springframework.stereotype.Repository" />-->

    <!--<context:component-scan base-package="dao" />-->
    <!--<context:component-scan base-package="service" />-->

    <context:property-placeholder location="classpath:props/db.properties" ignore-unresolvable="true"/>
    <!-- mysql连接的基本配置，使用的是spring提供的 DriverManagerDataSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="url" value="${db.url}"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 别名包，等同于mybatis配置文件conf.xml中的typeAliases，简化映射文件.xml中类的引用 -->
        <property name="typeAliasesPackage" value="dto"/>
        <property name="mapperLocations" value="classpath:mybatis/mapper/*Mapper.xml" />
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mapper接口扫描的包，即将此包下所有符合的mapper接口加载到SpringIOC容器管理 -->
        <property name="basePackage" value="dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
    <!-- 添加事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 启动事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="dao"/>
    <context:component-scan base-package="service"/>
</beans>